//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LBTCPrototype.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Balance", Namespace="http://schemas.datacontract.org/2004/07/OkPayAPI")]
    [System.SerializableAttribute()]
    public partial class Balance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionInfo", Namespace="http://schemas.datacontract.org/2004/07/OkPayAPI")]
    [System.SerializableAttribute()]
    public partial class TransactionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LBTCPrototype.ServiceReference1.AccountInfo ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LBTCPrototype.ServiceReference1.AccountInfo SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LBTCPrototype.ServiceReference1.OperationStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Fees {
            get {
                return this.FeesField;
            }
            set {
                if ((this.FeesField.Equals(value) != true)) {
                    this.FeesField = value;
                    this.RaisePropertyChanged("Fees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Invoice {
            get {
                return this.InvoiceField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceField, value) != true)) {
                    this.InvoiceField = value;
                    this.RaisePropertyChanged("Invoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Net {
            get {
                return this.NetField;
            }
            set {
                if ((this.NetField.Equals(value) != true)) {
                    this.NetField = value;
                    this.RaisePropertyChanged("Net");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationName {
            get {
                return this.OperationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationNameField, value) != true)) {
                    this.OperationNameField = value;
                    this.RaisePropertyChanged("OperationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LBTCPrototype.ServiceReference1.AccountInfo Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LBTCPrototype.ServiceReference1.AccountInfo Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LBTCPrototype.ServiceReference1.OperationStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountInfo", Namespace="http://schemas.datacontract.org/2004/07/OkPayAPI")]
    [System.SerializableAttribute()]
    public partial class AccountInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Country_ISOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LBTCPrototype.ServiceReference1.VerificationStatuses VerificationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WalletIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country_ISO {
            get {
                return this.Country_ISOField;
            }
            set {
                if ((object.ReferenceEquals(this.Country_ISOField, value) != true)) {
                    this.Country_ISOField = value;
                    this.RaisePropertyChanged("Country_ISO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LBTCPrototype.ServiceReference1.VerificationStatuses VerificationStatus {
            get {
                return this.VerificationStatusField;
            }
            set {
                if ((this.VerificationStatusField.Equals(value) != true)) {
                    this.VerificationStatusField = value;
                    this.RaisePropertyChanged("VerificationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WalletID {
            get {
                return this.WalletIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WalletIDField, value) != true)) {
                    this.WalletIDField = value;
                    this.RaisePropertyChanged("WalletID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationStatus", Namespace="http://schemas.datacontract.org/2004/07/OkPayAPI")]
    public enum OperationStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reversed = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hold = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 32,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VerificationStatuses", Namespace="http://schemas.datacontract.org/2004/07/OkPayLink.OkPayService")]
    public enum VerificationStatuses : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unverified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Formal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Verified = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoryInfo", Namespace="http://schemas.datacontract.org/2004/07/OkPayAPI")]
    [System.SerializableAttribute()]
    public partial class HistoryInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LBTCPrototype.ServiceReference1.TransactionInfo[] TransactionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LBTCPrototype.ServiceReference1.TransactionInfo[] Transactions {
            get {
                return this.TransactionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionsField, value) != true)) {
                    this.TransactionsField = value;
                    this.RaisePropertyChanged("Transactions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Withdrawal_Info", Namespace="http://schemas.datacontract.org/2004/07/OkPayAPI")]
    [System.SerializableAttribute()]
    public partial class Withdrawal_Info : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GrossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OperationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaySystemTransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentMethodAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LBTCPrototype.ServiceReference1.OperationStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExchangeRate {
            get {
                return this.ExchangeRateField;
            }
            set {
                if ((this.ExchangeRateField.Equals(value) != true)) {
                    this.ExchangeRateField = value;
                    this.RaisePropertyChanged("ExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Gross {
            get {
                return this.GrossField;
            }
            set {
                if ((this.GrossField.Equals(value) != true)) {
                    this.GrossField = value;
                    this.RaisePropertyChanged("Gross");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OperationID {
            get {
                return this.OperationIDField;
            }
            set {
                if ((this.OperationIDField.Equals(value) != true)) {
                    this.OperationIDField = value;
                    this.RaisePropertyChanged("OperationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaySystemTransactionID {
            get {
                return this.PaySystemTransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PaySystemTransactionIDField, value) != true)) {
                    this.PaySystemTransactionIDField = value;
                    this.RaisePropertyChanged("PaySystemTransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentMethod {
            get {
                return this.PaymentMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentMethodField, value) != true)) {
                    this.PaymentMethodField = value;
                    this.RaisePropertyChanged("PaymentMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentMethodAmount {
            get {
                return this.PaymentMethodAmountField;
            }
            set {
                if ((this.PaymentMethodAmountField.Equals(value) != true)) {
                    this.PaymentMethodAmountField = value;
                    this.RaisePropertyChanged("PaymentMethodAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LBTCPrototype.ServiceReference1.OperationStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientStatus", Namespace="http://schemas.datacontract.org/2004/07/OkPayLink.OkPayService")]
    public enum ClientStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unregistered = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Registration = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unverified = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Formal = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Verified = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Blocked = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subscription", Namespace="http://schemas.datacontract.org/2004/07/OkPayAPI.DataContract")]
    [System.SerializableAttribute()]
    public partial class Subscription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LBTCPrototype.ServiceReference1.AccountInfo ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastPaymentDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerchantWalletIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextPaymentDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OutstandingBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReattemptAcumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReattemptDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegularCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegularCycleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LBTCPrototype.ServiceReference1.SubscriptionCycleIntervals RegularIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegularPaymentsDoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RegularPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RetryAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SetupPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LBTCPrototype.ServiceReference1.Address ShippingAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShippingNeededField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LBTCPrototype.ServiceReference1.SubscriptionStatuses StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrialCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrialCycleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LBTCPrototype.ServiceReference1.SubscriptionCycleIntervals TrialIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrialPaymentsDoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TrialPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidUntilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LBTCPrototype.ServiceReference1.AccountInfo Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastPaymentDateTime {
            get {
                return this.LastPaymentDateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.LastPaymentDateTimeField, value) != true)) {
                    this.LastPaymentDateTimeField = value;
                    this.RaisePropertyChanged("LastPaymentDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MerchantWalletID {
            get {
                return this.MerchantWalletIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MerchantWalletIDField, value) != true)) {
                    this.MerchantWalletIDField = value;
                    this.RaisePropertyChanged("MerchantWalletID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextPaymentDateTime {
            get {
                return this.NextPaymentDateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.NextPaymentDateTimeField, value) != true)) {
                    this.NextPaymentDateTimeField = value;
                    this.RaisePropertyChanged("NextPaymentDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OutstandingBalance {
            get {
                return this.OutstandingBalanceField;
            }
            set {
                if ((this.OutstandingBalanceField.Equals(value) != true)) {
                    this.OutstandingBalanceField = value;
                    this.RaisePropertyChanged("OutstandingBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReattemptAcum {
            get {
                return this.ReattemptAcumField;
            }
            set {
                if ((this.ReattemptAcumField.Equals(value) != true)) {
                    this.ReattemptAcumField = value;
                    this.RaisePropertyChanged("ReattemptAcum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReattemptDays {
            get {
                return this.ReattemptDaysField;
            }
            set {
                if ((this.ReattemptDaysField.Equals(value) != true)) {
                    this.ReattemptDaysField = value;
                    this.RaisePropertyChanged("ReattemptDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegularCount {
            get {
                return this.RegularCountField;
            }
            set {
                if ((this.RegularCountField.Equals(value) != true)) {
                    this.RegularCountField = value;
                    this.RaisePropertyChanged("RegularCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegularCycle {
            get {
                return this.RegularCycleField;
            }
            set {
                if ((this.RegularCycleField.Equals(value) != true)) {
                    this.RegularCycleField = value;
                    this.RaisePropertyChanged("RegularCycle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LBTCPrototype.ServiceReference1.SubscriptionCycleIntervals RegularInterval {
            get {
                return this.RegularIntervalField;
            }
            set {
                if ((this.RegularIntervalField.Equals(value) != true)) {
                    this.RegularIntervalField = value;
                    this.RaisePropertyChanged("RegularInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegularPaymentsDone {
            get {
                return this.RegularPaymentsDoneField;
            }
            set {
                if ((this.RegularPaymentsDoneField.Equals(value) != true)) {
                    this.RegularPaymentsDoneField = value;
                    this.RaisePropertyChanged("RegularPaymentsDone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RegularPrice {
            get {
                return this.RegularPriceField;
            }
            set {
                if ((this.RegularPriceField.Equals(value) != true)) {
                    this.RegularPriceField = value;
                    this.RaisePropertyChanged("RegularPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RetryAt {
            get {
                return this.RetryAtField;
            }
            set {
                if ((object.ReferenceEquals(this.RetryAtField, value) != true)) {
                    this.RetryAtField = value;
                    this.RaisePropertyChanged("RetryAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SetupPrice {
            get {
                return this.SetupPriceField;
            }
            set {
                if ((this.SetupPriceField.Equals(value) != true)) {
                    this.SetupPriceField = value;
                    this.RaisePropertyChanged("SetupPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LBTCPrototype.ServiceReference1.Address ShippingAddress {
            get {
                return this.ShippingAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingAddressField, value) != true)) {
                    this.ShippingAddressField = value;
                    this.RaisePropertyChanged("ShippingAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShippingNeeded {
            get {
                return this.ShippingNeededField;
            }
            set {
                if ((this.ShippingNeededField.Equals(value) != true)) {
                    this.ShippingNeededField = value;
                    this.RaisePropertyChanged("ShippingNeeded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateTimeField, value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LBTCPrototype.ServiceReference1.SubscriptionStatuses Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrialCount {
            get {
                return this.TrialCountField;
            }
            set {
                if ((this.TrialCountField.Equals(value) != true)) {
                    this.TrialCountField = value;
                    this.RaisePropertyChanged("TrialCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrialCycle {
            get {
                return this.TrialCycleField;
            }
            set {
                if ((this.TrialCycleField.Equals(value) != true)) {
                    this.TrialCycleField = value;
                    this.RaisePropertyChanged("TrialCycle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LBTCPrototype.ServiceReference1.SubscriptionCycleIntervals TrialInterval {
            get {
                return this.TrialIntervalField;
            }
            set {
                if ((this.TrialIntervalField.Equals(value) != true)) {
                    this.TrialIntervalField = value;
                    this.RaisePropertyChanged("TrialInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrialPaymentsDone {
            get {
                return this.TrialPaymentsDoneField;
            }
            set {
                if ((this.TrialPaymentsDoneField.Equals(value) != true)) {
                    this.TrialPaymentsDoneField = value;
                    this.RaisePropertyChanged("TrialPaymentsDone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TrialPrice {
            get {
                return this.TrialPriceField;
            }
            set {
                if ((this.TrialPriceField.Equals(value) != true)) {
                    this.TrialPriceField = value;
                    this.RaisePropertyChanged("TrialPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidUntil {
            get {
                return this.ValidUntilField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidUntilField, value) != true)) {
                    this.ValidUntilField = value;
                    this.RaisePropertyChanged("ValidUntil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/OkPayAPI.DataContract")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVerifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LBTCPrototype.ServiceReference1.AddressTypes TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine {
            get {
                return this.AddressLineField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLineField, value) != true)) {
                    this.AddressLineField = value;
                    this.RaisePropertyChanged("AddressLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVerified {
            get {
                return this.IsVerifiedField;
            }
            set {
                if ((this.IsVerifiedField.Equals(value) != true)) {
                    this.IsVerifiedField = value;
                    this.RaisePropertyChanged("IsVerified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LBTCPrototype.ServiceReference1.AddressTypes Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionCycleIntervals", Namespace="http://schemas.datacontract.org/2004/07/OkPayAPI")]
    public enum SubscriptionCycleIntervals : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Days = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weeks = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Months = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Years = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionStatuses", Namespace="http://schemas.datacontract.org/2004/07/OkPayAPI")]
    public enum SubscriptionStatuses : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modified = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Suspended = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressTypes", Namespace="http://schemas.datacontract.org/2004/07/OkPayAPI")]
    public enum AddressTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unset = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Legal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Actual = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Postal = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://api.okpay.com", ConfigurationName="ServiceReference1.I_OkPayAPI")]
    public interface I_OkPayAPI {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Get_Date_Time", ReplyAction="https://api.okpay.com/I_OkPayAPI/Get_Date_TimeResponse")]
        string Get_Date_Time();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Get_Date_Time", ReplyAction="https://api.okpay.com/I_OkPayAPI/Get_Date_TimeResponse")]
        System.Threading.Tasks.Task<string> Get_Date_TimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Wallet_Get_Balance", ReplyAction="https://api.okpay.com/I_OkPayAPI/Wallet_Get_BalanceResponse")]
        LBTCPrototype.ServiceReference1.Balance[] Wallet_Get_Balance(string WalletID, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Wallet_Get_Balance", ReplyAction="https://api.okpay.com/I_OkPayAPI/Wallet_Get_BalanceResponse")]
        System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Balance[]> Wallet_Get_BalanceAsync(string WalletID, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Wallet_Get_Currency_Balance", ReplyAction="https://api.okpay.com/I_OkPayAPI/Wallet_Get_Currency_BalanceResponse")]
        LBTCPrototype.ServiceReference1.Balance Wallet_Get_Currency_Balance(string WalletID, string SecurityToken, string Currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Wallet_Get_Currency_Balance", ReplyAction="https://api.okpay.com/I_OkPayAPI/Wallet_Get_Currency_BalanceResponse")]
        System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Balance> Wallet_Get_Currency_BalanceAsync(string WalletID, string SecurityToken, string Currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Send_Money", ReplyAction="https://api.okpay.com/I_OkPayAPI/Send_MoneyResponse")]
        LBTCPrototype.ServiceReference1.TransactionInfo Send_Money(string WalletID, string SecurityToken, string Receiver, string Currency, decimal Amount, string Comment, bool IsReceiverPaysFees, string Invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Send_Money", ReplyAction="https://api.okpay.com/I_OkPayAPI/Send_MoneyResponse")]
        System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.TransactionInfo> Send_MoneyAsync(string WalletID, string SecurityToken, string Receiver, string Currency, decimal Amount, string Comment, bool IsReceiverPaysFees, string Invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Transaction_Get", ReplyAction="https://api.okpay.com/I_OkPayAPI/Transaction_GetResponse")]
        LBTCPrototype.ServiceReference1.TransactionInfo Transaction_Get(string WalletID, string SecurityToken, long TxnID, string Invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Transaction_Get", ReplyAction="https://api.okpay.com/I_OkPayAPI/Transaction_GetResponse")]
        System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.TransactionInfo> Transaction_GetAsync(string WalletID, string SecurityToken, long TxnID, string Invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Transaction_History", ReplyAction="https://api.okpay.com/I_OkPayAPI/Transaction_HistoryResponse")]
        LBTCPrototype.ServiceReference1.HistoryInfo Transaction_History(string WalletID, string SecurityToken, string From, string Till, int PageSize, int PageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Transaction_History", ReplyAction="https://api.okpay.com/I_OkPayAPI/Transaction_HistoryResponse")]
        System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.HistoryInfo> Transaction_HistoryAsync(string WalletID, string SecurityToken, string From, string Till, int PageSize, int PageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/DebitCard_Prepay", ReplyAction="https://api.okpay.com/I_OkPayAPI/DebitCard_PrepayResponse")]
        long DebitCard_Prepay(string WalletID, string SecurityToken, string Email, string Currency, bool IsCourierDelivery, string Comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/DebitCard_Prepay", ReplyAction="https://api.okpay.com/I_OkPayAPI/DebitCard_PrepayResponse")]
        System.Threading.Tasks.Task<long> DebitCard_PrepayAsync(string WalletID, string SecurityToken, string Email, string Currency, bool IsCourierDelivery, string Comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Account_Check", ReplyAction="https://api.okpay.com/I_OkPayAPI/Account_CheckResponse")]
        long Account_Check(string WalletID, string SecurityToken, string Account);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Account_Check", ReplyAction="https://api.okpay.com/I_OkPayAPI/Account_CheckResponse")]
        System.Threading.Tasks.Task<long> Account_CheckAsync(string WalletID, string SecurityToken, string Account);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Withdraw_To_Ecurrency_Calculate", ReplyAction="https://api.okpay.com/I_OkPayAPI/Withdraw_To_Ecurrency_CalculateResponse")]
        LBTCPrototype.ServiceReference1.Withdrawal_Info Withdraw_To_Ecurrency_Calculate(string WalletID, string SecurityToken, string PaymentMethod, decimal Amount, string Currency, bool FeesFromAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Withdraw_To_Ecurrency_Calculate", ReplyAction="https://api.okpay.com/I_OkPayAPI/Withdraw_To_Ecurrency_CalculateResponse")]
        System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Withdrawal_Info> Withdraw_To_Ecurrency_CalculateAsync(string WalletID, string SecurityToken, string PaymentMethod, decimal Amount, string Currency, bool FeesFromAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Withdraw_To_Ecurrency", ReplyAction="https://api.okpay.com/I_OkPayAPI/Withdraw_To_EcurrencyResponse")]
        LBTCPrototype.ServiceReference1.Withdrawal_Info Withdraw_To_Ecurrency(string WalletID, string SecurityToken, string PaymentMethod, string PaySystemAccount, decimal Amount, string Currency, bool FeesFromAmount, string Invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Withdraw_To_Ecurrency", ReplyAction="https://api.okpay.com/I_OkPayAPI/Withdraw_To_EcurrencyResponse")]
        System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Withdrawal_Info> Withdraw_To_EcurrencyAsync(string WalletID, string SecurityToken, string PaymentMethod, string PaySystemAccount, decimal Amount, string Currency, bool FeesFromAmount, string Invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/EX_Account_Check", ReplyAction="https://api.okpay.com/I_OkPayAPI/EX_Account_CheckResponse")]
        long EX_Account_Check(string WalletID, string SecurityToken, string Account);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/EX_Account_Check", ReplyAction="https://api.okpay.com/I_OkPayAPI/EX_Account_CheckResponse")]
        System.Threading.Tasks.Task<long> EX_Account_CheckAsync(string WalletID, string SecurityToken, string Account);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/EX_Client_Check_Status", ReplyAction="https://api.okpay.com/I_OkPayAPI/EX_Client_Check_StatusResponse")]
        LBTCPrototype.ServiceReference1.ClientStatus EX_Client_Check_Status(string WalletID, string SecurityToken, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/EX_Client_Check_Status", ReplyAction="https://api.okpay.com/I_OkPayAPI/EX_Client_Check_StatusResponse")]
        System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.ClientStatus> EX_Client_Check_StatusAsync(string WalletID, string SecurityToken, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Subscription_Get", ReplyAction="https://api.okpay.com/I_OkPayAPI/Subscription_GetResponse")]
        LBTCPrototype.ServiceReference1.Subscription Subscription_Get(string WalletID, string SecurityToken, long SubscriptionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Subscription_Get", ReplyAction="https://api.okpay.com/I_OkPayAPI/Subscription_GetResponse")]
        System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Subscription> Subscription_GetAsync(string WalletID, string SecurityToken, long SubscriptionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Subscriptions_Filter", ReplyAction="https://api.okpay.com/I_OkPayAPI/Subscriptions_FilterResponse")]
        LBTCPrototype.ServiceReference1.Subscription[] Subscriptions_Filter(string WalletID, string SecurityToken, string Title, string From, string Till, LBTCPrototype.ServiceReference1.SubscriptionStatuses[] Statuses);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Subscriptions_Filter", ReplyAction="https://api.okpay.com/I_OkPayAPI/Subscriptions_FilterResponse")]
        System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Subscription[]> Subscriptions_FilterAsync(string WalletID, string SecurityToken, string Title, string From, string Till, LBTCPrototype.ServiceReference1.SubscriptionStatuses[] Statuses);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Subscription_Update", ReplyAction="https://api.okpay.com/I_OkPayAPI/Subscription_UpdateResponse")]
        LBTCPrototype.ServiceReference1.Subscription Subscription_Update(string WalletID, string SecurityToken, LBTCPrototype.ServiceReference1.Subscription Sub, string Comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Subscription_Update", ReplyAction="https://api.okpay.com/I_OkPayAPI/Subscription_UpdateResponse")]
        System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Subscription> Subscription_UpdateAsync(string WalletID, string SecurityToken, LBTCPrototype.ServiceReference1.Subscription Sub, string Comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Subscription_Get_Operations", ReplyAction="https://api.okpay.com/I_OkPayAPI/Subscription_Get_OperationsResponse")]
        LBTCPrototype.ServiceReference1.TransactionInfo[] Subscription_Get_Operations(string WalletID, string SecurityToken, long SubscriptionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.okpay.com/I_OkPayAPI/Subscription_Get_Operations", ReplyAction="https://api.okpay.com/I_OkPayAPI/Subscription_Get_OperationsResponse")]
        System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.TransactionInfo[]> Subscription_Get_OperationsAsync(string WalletID, string SecurityToken, long SubscriptionID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface I_OkPayAPIChannel : LBTCPrototype.ServiceReference1.I_OkPayAPI, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class I_OkPayAPIClient : System.ServiceModel.ClientBase<LBTCPrototype.ServiceReference1.I_OkPayAPI>, LBTCPrototype.ServiceReference1.I_OkPayAPI {
        
        public I_OkPayAPIClient() {
        }
        
        public I_OkPayAPIClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public I_OkPayAPIClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public I_OkPayAPIClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public I_OkPayAPIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Get_Date_Time() {
            return base.Channel.Get_Date_Time();
        }
        
        public System.Threading.Tasks.Task<string> Get_Date_TimeAsync() {
            return base.Channel.Get_Date_TimeAsync();
        }
        
        public LBTCPrototype.ServiceReference1.Balance[] Wallet_Get_Balance(string WalletID, string SecurityToken) {
            return base.Channel.Wallet_Get_Balance(WalletID, SecurityToken);
        }
        
        public System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Balance[]> Wallet_Get_BalanceAsync(string WalletID, string SecurityToken) {
            return base.Channel.Wallet_Get_BalanceAsync(WalletID, SecurityToken);
        }
        
        public LBTCPrototype.ServiceReference1.Balance Wallet_Get_Currency_Balance(string WalletID, string SecurityToken, string Currency) {
            return base.Channel.Wallet_Get_Currency_Balance(WalletID, SecurityToken, Currency);
        }
        
        public System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Balance> Wallet_Get_Currency_BalanceAsync(string WalletID, string SecurityToken, string Currency) {
            return base.Channel.Wallet_Get_Currency_BalanceAsync(WalletID, SecurityToken, Currency);
        }
        
        public LBTCPrototype.ServiceReference1.TransactionInfo Send_Money(string WalletID, string SecurityToken, string Receiver, string Currency, decimal Amount, string Comment, bool IsReceiverPaysFees, string Invoice) {
            return base.Channel.Send_Money(WalletID, SecurityToken, Receiver, Currency, Amount, Comment, IsReceiverPaysFees, Invoice);
        }
        
        public System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.TransactionInfo> Send_MoneyAsync(string WalletID, string SecurityToken, string Receiver, string Currency, decimal Amount, string Comment, bool IsReceiverPaysFees, string Invoice) {
            return base.Channel.Send_MoneyAsync(WalletID, SecurityToken, Receiver, Currency, Amount, Comment, IsReceiverPaysFees, Invoice);
        }
        
        public LBTCPrototype.ServiceReference1.TransactionInfo Transaction_Get(string WalletID, string SecurityToken, long TxnID, string Invoice) {
            return base.Channel.Transaction_Get(WalletID, SecurityToken, TxnID, Invoice);
        }
        
        public System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.TransactionInfo> Transaction_GetAsync(string WalletID, string SecurityToken, long TxnID, string Invoice) {
            return base.Channel.Transaction_GetAsync(WalletID, SecurityToken, TxnID, Invoice);
        }
        
        public LBTCPrototype.ServiceReference1.HistoryInfo Transaction_History(string WalletID, string SecurityToken, string From, string Till, int PageSize, int PageNumber) {
            return base.Channel.Transaction_History(WalletID, SecurityToken, From, Till, PageSize, PageNumber);
        }
        
        public System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.HistoryInfo> Transaction_HistoryAsync(string WalletID, string SecurityToken, string From, string Till, int PageSize, int PageNumber) {
            return base.Channel.Transaction_HistoryAsync(WalletID, SecurityToken, From, Till, PageSize, PageNumber);
        }
        
        public long DebitCard_Prepay(string WalletID, string SecurityToken, string Email, string Currency, bool IsCourierDelivery, string Comment) {
            return base.Channel.DebitCard_Prepay(WalletID, SecurityToken, Email, Currency, IsCourierDelivery, Comment);
        }
        
        public System.Threading.Tasks.Task<long> DebitCard_PrepayAsync(string WalletID, string SecurityToken, string Email, string Currency, bool IsCourierDelivery, string Comment) {
            return base.Channel.DebitCard_PrepayAsync(WalletID, SecurityToken, Email, Currency, IsCourierDelivery, Comment);
        }
        
        public long Account_Check(string WalletID, string SecurityToken, string Account) {
            return base.Channel.Account_Check(WalletID, SecurityToken, Account);
        }
        
        public System.Threading.Tasks.Task<long> Account_CheckAsync(string WalletID, string SecurityToken, string Account) {
            return base.Channel.Account_CheckAsync(WalletID, SecurityToken, Account);
        }
        
        public LBTCPrototype.ServiceReference1.Withdrawal_Info Withdraw_To_Ecurrency_Calculate(string WalletID, string SecurityToken, string PaymentMethod, decimal Amount, string Currency, bool FeesFromAmount) {
            return base.Channel.Withdraw_To_Ecurrency_Calculate(WalletID, SecurityToken, PaymentMethod, Amount, Currency, FeesFromAmount);
        }
        
        public System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Withdrawal_Info> Withdraw_To_Ecurrency_CalculateAsync(string WalletID, string SecurityToken, string PaymentMethod, decimal Amount, string Currency, bool FeesFromAmount) {
            return base.Channel.Withdraw_To_Ecurrency_CalculateAsync(WalletID, SecurityToken, PaymentMethod, Amount, Currency, FeesFromAmount);
        }
        
        public LBTCPrototype.ServiceReference1.Withdrawal_Info Withdraw_To_Ecurrency(string WalletID, string SecurityToken, string PaymentMethod, string PaySystemAccount, decimal Amount, string Currency, bool FeesFromAmount, string Invoice) {
            return base.Channel.Withdraw_To_Ecurrency(WalletID, SecurityToken, PaymentMethod, PaySystemAccount, Amount, Currency, FeesFromAmount, Invoice);
        }
        
        public System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Withdrawal_Info> Withdraw_To_EcurrencyAsync(string WalletID, string SecurityToken, string PaymentMethod, string PaySystemAccount, decimal Amount, string Currency, bool FeesFromAmount, string Invoice) {
            return base.Channel.Withdraw_To_EcurrencyAsync(WalletID, SecurityToken, PaymentMethod, PaySystemAccount, Amount, Currency, FeesFromAmount, Invoice);
        }
        
        public long EX_Account_Check(string WalletID, string SecurityToken, string Account) {
            return base.Channel.EX_Account_Check(WalletID, SecurityToken, Account);
        }
        
        public System.Threading.Tasks.Task<long> EX_Account_CheckAsync(string WalletID, string SecurityToken, string Account) {
            return base.Channel.EX_Account_CheckAsync(WalletID, SecurityToken, Account);
        }
        
        public LBTCPrototype.ServiceReference1.ClientStatus EX_Client_Check_Status(string WalletID, string SecurityToken, string Email) {
            return base.Channel.EX_Client_Check_Status(WalletID, SecurityToken, Email);
        }
        
        public System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.ClientStatus> EX_Client_Check_StatusAsync(string WalletID, string SecurityToken, string Email) {
            return base.Channel.EX_Client_Check_StatusAsync(WalletID, SecurityToken, Email);
        }
        
        public LBTCPrototype.ServiceReference1.Subscription Subscription_Get(string WalletID, string SecurityToken, long SubscriptionID) {
            return base.Channel.Subscription_Get(WalletID, SecurityToken, SubscriptionID);
        }
        
        public System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Subscription> Subscription_GetAsync(string WalletID, string SecurityToken, long SubscriptionID) {
            return base.Channel.Subscription_GetAsync(WalletID, SecurityToken, SubscriptionID);
        }
        
        public LBTCPrototype.ServiceReference1.Subscription[] Subscriptions_Filter(string WalletID, string SecurityToken, string Title, string From, string Till, LBTCPrototype.ServiceReference1.SubscriptionStatuses[] Statuses) {
            return base.Channel.Subscriptions_Filter(WalletID, SecurityToken, Title, From, Till, Statuses);
        }
        
        public System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Subscription[]> Subscriptions_FilterAsync(string WalletID, string SecurityToken, string Title, string From, string Till, LBTCPrototype.ServiceReference1.SubscriptionStatuses[] Statuses) {
            return base.Channel.Subscriptions_FilterAsync(WalletID, SecurityToken, Title, From, Till, Statuses);
        }
        
        public LBTCPrototype.ServiceReference1.Subscription Subscription_Update(string WalletID, string SecurityToken, LBTCPrototype.ServiceReference1.Subscription Sub, string Comment) {
            return base.Channel.Subscription_Update(WalletID, SecurityToken, Sub, Comment);
        }
        
        public System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.Subscription> Subscription_UpdateAsync(string WalletID, string SecurityToken, LBTCPrototype.ServiceReference1.Subscription Sub, string Comment) {
            return base.Channel.Subscription_UpdateAsync(WalletID, SecurityToken, Sub, Comment);
        }
        
        public LBTCPrototype.ServiceReference1.TransactionInfo[] Subscription_Get_Operations(string WalletID, string SecurityToken, long SubscriptionID) {
            return base.Channel.Subscription_Get_Operations(WalletID, SecurityToken, SubscriptionID);
        }
        
        public System.Threading.Tasks.Task<LBTCPrototype.ServiceReference1.TransactionInfo[]> Subscription_Get_OperationsAsync(string WalletID, string SecurityToken, long SubscriptionID) {
            return base.Channel.Subscription_Get_OperationsAsync(WalletID, SecurityToken, SubscriptionID);
        }
    }
}
